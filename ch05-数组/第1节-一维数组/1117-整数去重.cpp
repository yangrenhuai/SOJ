/*
【题目描述】
给定含有n个整数的序列，要求对这个序列进行去重操作。所谓去重，是指对这个序列中每个重复出现的数，
 只保留该数第一次出现的位置，删除其余位置。

【输入】
输入包含两行：

第一行包含一个正整数n（1≤n≤20000），表示第二行序列中数字的个数；

第二行包含n个整数，整数之间以一个空格分开。每个整数大于等于10、小于等于5000。

【输出】
输出只有一行，按照输入的顺序输出其中不重复的数字，整数之间用一个空格分开。

【输入样例】
5
10 12 93 12 75
【输出样例】
10 12 93 75
*/

#include <bits/stdc++.h>
using namespace std;

int a[20001],b[20001];//a数组存储读入的数据，b数组标记是否有重复的数据
int n;
int main() {
    cin>>n;
    for(int i=1;i<=n;i++){
        cin>>a[i];
    }

    for(int i=1;i<=n;i++){
        if(b[a[i]]==0){
            cout<<a[i]<<" ";
            b[a[i]]=1;//标记a[i]已经出现过了，后面再出现就不能输出
        }
    }
    return 0;
}
