/*
【题目描述】
假设有N盏灯(N为不大于5000的正整数)，从1到N按顺序依次编号，初始时全部处于开启状态；
 有M个人(M为不大于N的正整数)也从1到M依次编号。

第一个人(1号)将灯全部关闭，第二个人(2号)将编号为2的倍数的灯打开，
 第三个人(3号)将编号为3的倍数的灯做相反处理（即将打开的灯关闭，将关闭的灯打开）。
 依照编号递增顺序，以后的人都和3号一样，将凡是自己编号倍数的灯做相反处理。

请问：当第M个人操作之后，哪几盏灯是关闭的，按从小到大输出其编号，其间用逗号间隔。

【输入】
输入正整数N和M，以单个空格隔开。

【输出】
顺次输出关闭的灯的编号，其间用逗号间隔。

【输入样例】
10 10
【输出样例】
1,4,9
*/

#include <bits/stdc++.h>

using namespace std;
//此题为模拟题
bool a[5001]={0};//表示灯的状态,第1个人关闭所有的灯
int m,n;//m个人，n盏灯
int flag=1;//表示是否输出逗号
int main() {
    cin>>n>>m;

    //模拟m个人的行为，从第2个人开始
    for(int i=2;i<=m;i++){
        for(int j=1;j<=n;j++){
            if(j%i==0) a[j]=!a[j];
        }
    }
    for(int j=1;j<=n;j++){
        if(!a[j]) {
            if(flag) //第一次输出，不输出逗号
                flag=0;
            else
                cout<<",";
            cout<<j<<',';
        }
    }
    return 0;
}
