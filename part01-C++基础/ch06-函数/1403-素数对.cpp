/*
 1403：素数对
 【题目描述】
两个相差为2的素数称为素数对，如5和7，17和19等，本题目要求找出所有两个数均不大于n的素数对。

【输入】
一个正整数n(1≤n≤10000)。

【输出】
所有小于等于n的素数对。每对素数对输出一行，中间用单个空格隔开。若没有找到任何素数对，输出empty。

【输入样例】
100
【输出样例】
3 5
5 7
11 13
17 19
29 31
41 43
59 61
71 73
*/

#include "iostream"
using namespace std;

int a[100010]; //存储所有的素数

void plist(){
    /*
     * 埃拉托斯特尼筛法
     * 要得到自然数n以内的全部素数，必须把不大于根号n的所有素数的倍数剔除，剩下的就是素数。
     * 先用2去筛，即把2留下，把2的倍数剔除掉；
     * 再用下一个质数，也就是3筛，把3留下，把3的倍数剔除掉；
     * 接下去用下一个质数5筛，把5留下，把5的倍数剔除掉；不断重复下去......
     * */
    for(int i=2;i*i<=10000;i++){
        if(a[i]!=1){
            for(int j=2;i*j<=10000;j++){
                a[i*j]=1;
            }
        }
    }
}
int main(){
    plist();

    int n, flag=0;
    cin >> n;

    for(int i=2;i<=n;i++){
        if(a[i]==0 &&a[i+2]==0 && i+2<=n){
            cout << i << " "<< i+2 << endl;
            flag=1;
        }
    }
    if(flag==0) cout << "empty";
}
